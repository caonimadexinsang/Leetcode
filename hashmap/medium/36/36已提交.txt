class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        for (int i = 0;i < 9;i++) {
		unordered_map<char, bool> rowmap;
		unordered_map<char, bool> colmap;
		for (int j = 0;j < 9;j++) {
			if (board[i][j] != '.') {
				if (rowmap[board[i][j]] != true)
					rowmap[board[i][j]] = true;
				else
					return false;
			}
			if (board[j][i] != '.') {
				if (colmap[board[j][i]] != true)
					colmap[board[j][i]] = true;
				else
					return false;
			}
		}
	}
	for (int i = 0;i < 9;i += 3) {
		for (int j = 0;j < 9;j += 3) {
			unordered_map<char, bool> gridmap;
			for (int row = i;row < i + 3;row++) {
				for (int col = j;col < j + 3;col++) {
					if (board[row][col] != '.') {
						if (gridmap[board[row][col]] != true)
							gridmap[board[row][col]] = true;
						else
							return false;
					}
				}
			}
		}
	}
        return true;
    }
};
//记住每行每列，unordered_map都要重新初始化，而每个子9个格子就是最后那个大循环，要在每个新的子格子重新初始化，每个子格子指的是3*3