/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
       // ListNode* phead = head;
        if(head == NULL||k<=0)
            return head;
	ListNode* pre = head;
	int length = 1;
	while (head && head->next) {
		length++;
		head = head->next;
	}
	cout << length;
	head->next = pre;
     k = k % length;
	for (int i = 0;i < length - k - 1;i++) { //应该在倒数第k位的前一位，让pre指着它
		pre = pre->next;
	}
	head = pre->next;
	pre->next = NULL;
        return head;
    }
};